
=< link_to "<- Back to category page",  shop_path(@product.shop), class:"btn btn-light"
.product-container
  .product-right
    img.card-img-top src="https://cdn3d.iconscout.com/3d/premium/thumb/product-5806313-4863042.png" style= "height: 300px; width: 100%; object-fit: contain;"
  .product-left
    h1
      == @product.title

    p
      - if @product.average_rating
        i This product has been bought #{@product.purchases_count} times with #{@product.average_rating} stars rating from #{@product.reviews_count} reviews
      - else
        i This product has been bought #{@product.purchases_count} times with #{@product.reviews_count} reviews


    // - if @product.cover.attached?
      // = image_tag @product.cover, style:"height: 100%; width: 100%; object-fit: contain"


    p
      strong Description:
      .trix-content
        == @product.description
    p
      strong
        | Price:
        =< number_to_currency(@product.price).gsub(/\.00$/, "")
    
    // hide add to cart button if current user is a seller
    - if current_user.buyer? 
      = form_for :line_item, url: line_items_path, remote: true do |f|
        = f.number_field :quantity, min: 0, value: 1
        = f.number_field :product_id, hidden: true, value: @product.id
        = f.submit "Add to cart", id: "add-to-cart"

// if buyer already bought this product, show review form
- if @product.has_bought_and_not_reviewed_by?(current_user)
  .review-form
    h2 Leave a review for the product you have purchased
    .form-wrapper
      = form_for :review, url: reviews_path, method: :post do |f|
        = f.number_field :product_id, hidden: true, value: @product.id
        = f.label :title
        = f.text_field :title
        = f.label :body
        = f.text_area :body, style: "height:150px"
        = f.label :rating
        .rating-wrapper
          .star-wrapper
            i.fa-solid.fa-star 
            i.fa-solid.fa-star
            i.fa-solid.fa-star
            i.fa-solid.fa-star
            i.fa-solid.fa-star
          = f.select :rating, options_for_select([['5 stars', 5],['4 stars', 4],['3 stars', 3],['2 stars', 2],['1 star', 1]], 5)
        = f.submit

- if @product.completed_reviews.count > 0
  .reviews-container
    h2 Discover what people feel for this product
    - @product.completed_reviews.each do |review|
      = render "reviews/review_card", review: review, user: review.get_user


script
  | document.getElementById("add-to-cart").addEventListener("click", function(){
    document.getElementById("number_of_item").innerText = parseInt(document.getElementById("number_of_item").innerText) +
    parseInt(document.getElementById("line_item_quantity").value);
    })
    function changeStar() {
        var emptystar = 5 - this.value;
        var block = document.querySelectorAll('i.fa-star');

        // case: click 5 -> fulfill all
        if(emptystar == 0){
            for (let index = 0; index < 5; index++) {
                block[index].classList.replace('fa-regular','fa-solid');
            }
        }
        else{
          // case: first click 1 - 4 star
            // first loop to fulfill 
            for (let index = 0; index < this.value; index++) {
                block[index].classList.replace('fa-regular','fa-solid');
            }
            // second loop to empty
            for (let index = this.value ; index < 5; index++) {
                block[index].classList.replace('fa-solid','fa-regular');
            }
          }
        }
        if(document.querySelector("#review_rating")){
          var select = document.querySelector("#review_rating");
          select.addEventListener('change', changeStar, false);
        }